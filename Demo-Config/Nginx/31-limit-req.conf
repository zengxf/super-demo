# 限流-请求数-漏桶算法
# 指令: limit_req_zone limit_req

# 上游-1  =>  http://localhost:9901
# Test    =>  http://127.0.0.1:9831/test/nginx/limit


# $binary_remote_addr：     基于客户端 IP 限流。
# zone=req_num_limit:10m：  分配 10MB 内存存储状态；区域命名为 req_num_limit。
# rate=10r/s：              每秒处理 10 个请求（即 1 请求/100ms）。
limit_req_zone  $binary_remote_addr     zone=req_num_limit:10m   rate=10r/s;


server {
    listen       9831;                  # 新代理端口
    server_name  127.0.0.1;             # 监听的 IP
    
    # burst=20：    允许突发 20 个请求排队。
    # nodelay：     立即处理突发请求，不延迟，超限后直接拒绝。
    limit_req   zone=req_num_limit      burst=20    nodelay;

    location ~ ^/test/nginx/ { 
        proxy_pass              http://localhost:9901;
        proxy_http_version      1.1;                    # 默认就是 1.0
        proxy_set_header        Connection        "";   # 清除 Connection: close 头
    }
}